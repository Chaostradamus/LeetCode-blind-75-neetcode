class Solution:
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
        res = defaultdict(list)
        
        for s in strs:
            count = [0] * 26
            
            for c in s:
                count[ord(c)-ord("a")] += 1
                
            res[tuple(count)].append(s)
            
        return res.values()


# Given an array of strings strs, group the anagrams together. You can return the answer in any order.

# An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.


# Example 1:

# Input: strs = ["eat", "tea", "tan", "ate", "nat", "bat"]
# Output: [["bat"], ["nat", "tan"], ["ate", "eat", "tea"]]
# Example 2:

# Input: strs = [""]
# Output: [[""]]
# Example 3:

# Input: strs = ["a"]
# Output: [["a"]]

# o(m* n * 26) where m is total number of input strings, n = average length of each str and 26 = length of count array
# make result list
# look through each string
# create count with 26 0's. 1 for each letter in the alphabet
#   loop through each character in s:
#       for each character it will create a key value pair where key is the instance of each letter in the string and valu will be the word
#        each word that has the same letter combos will be appended in the list to the correct key

# return the values of the result

# dont understand the code but understand the algorithm...not sure how you can loop through each character and update a key and use that as 
# key in a hashmap

# https://pythontutor.com/render.html#code=class%20Solution%28object%29%3A%0A%20%20%20%20def%20groupAnagrams%28self,%20strs%29%3A%0A%20%20%20%20%20%20%20%20res%20%3D%20defaultdict%28list%29%0A%0A%20%20%20%20%20%20%20%20for%20s%20in%20strs%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20count%20%3D%20%5B0%5D%20*%2026%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20for%20c%20in%20s%3A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20count%5Bord%28c%29%20-%20ord%28'a'%29%5D%20%2B%3D%201%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20res%5Btuple%28count%29%5D.append%28s%29%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20return%20res.values%28%29%0A%20%20%20%20%20%20%20%20%0Aleetcode%20%3D%20Solution%28%29%0Aleetcode.groupAnagrams%28strs%20%3D%20%5B%22eat%22,%22tea%22,%22tan%22,%22ate%22,%22nat%22,%22bat%22%5D%29&cumulative=false&curInstr=5&heapPrimitives=nevernest&mode=display&origin=opt-frontend.js&py=311&rawInputLstJSON=%5B%5D&textReferences=false

# https://leetcode.com/problems/group-anagrams/